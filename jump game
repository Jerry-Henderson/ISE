import pygame 
from sys import exit

def display_score():
    time = int((pygame.time.get_ticks() - start_time) / 1000)
    score_surface = test_font.render(f' {time}',False,(64,64,64))
    score_rectangle = score_surface.get_rect(center = (400,50))
    screen.blit(score_surface,score_rectangle)

def game_over():
    over_screen = pygame.image.load('OneDrive - KCETB/ISE portfolio/Platformer game/graphics/gameover2.jfif')
    over_screen_scaled = pygame.transform.scale(over_screen,(800,400))
    screen.blit(over_screen_scaled,(0,0))
    player_stand_scaled = pygame.transform.scale(player_stand,(125,200))
    over_surface = test_font.render("Game Over",False,("Black"))
    over_surface_rectangle = over_surface.get_rect(center = (400,50))
    aris_suface = test_font.render("Press Spacebar to Play again :)",False,"Black")
    aris_suface_rectangle = aris_suface.get_rect(center = (400,350))
    screen.blit(player_stand_scaled,player_stand_rectangle)
    screen.blit(over_surface,over_surface_rectangle)
    screen.blit(aris_suface,aris_suface_rectangle)

pygame.init()
game_running = True
clock = pygame.time.Clock()
screen = pygame.display.set_mode((800,400))
sky_suface = pygame.image.load('OneDrive - KCETB/ISE portfolio/Platformer game/graphics/Sky.png').convert()
start_time = 0
ground_suface = pygame.image.load('OneDrive - KCETB/ISE portfolio/Platformer game/graphics/ground.png').convert()

test_font = pygame.font.Font("OneDrive - KCETB/ISE portfolio/Platformer game/font/Pixeltype.ttf",50)


snail_surface= pygame.image.load('OneDrive - KCETB/ISE portfolio/Platformer game/graphics/snail1.png').convert_alpha()
snail_rectangle = snail_surface.get_rect(midbottom = (800,300))

player_stand = pygame.image.load('OneDrive - KCETB/ISE portfolio/Platformer game/graphics/player_stand.png')
player_stand_rectangle =  player_stand.get_rect(midbottom = (400,200))
player_surface = pygame.image.load('OneDrive - KCETB/ISE portfolio/Platformer game/graphics/player_walk_1.png')
player_rectangle = player_surface.get_rect(center = (100,300))

gravity = 0

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()
        if game_running == True:
            if event.type == pygame.KEYDOWN and player_rectangle.bottom == 300:
                if event.key == pygame.K_SPACE or event.key == pygame.K_UP :
                    gravity = -20
                    
            if event.type == pygame.MOUSEBUTTONDOWN and player_rectangle.bottom == 300:
                gravity = -20
        else:
            if  event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
                game_running = True
                snail_rectangle.left = 800
                start_time = pygame.time.get_ticks()                              
        
            
        

    if game_running:
        screen.blit(sky_suface,(0,0))
        screen.blit(ground_suface,(0,300))
        display_score()
        snail_rectangle.left -= 5
        if snail_rectangle.right <= 0:
            snail_rectangle.left = 800
        screen.blit(snail_surface,snail_rectangle)    

        gravity += 1
        player_rectangle.y += gravity
        if player_rectangle.bottom >= 300:
            player_rectangle.bottom = 300
        screen.blit(player_surface,player_rectangle)
        #screen.blit(score_surface,score_rectangle)

        if player_rectangle.colliderect(snail_rectangle):
            game_running = False
    else:
        game_over()
